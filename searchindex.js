Search.setIndex({envversion:46,filenames:["idea1","idea2","idea3","idea4","idea5","idea6","index"],objects:{},objnames:{},objtypes:{},terms:{"case":0,"public":[3,6],"while":6,about:6,achiev:6,add:[0,2,3],address:4,adinarayana:3,again:0,agricultur:[],agril:4,analysi:3,androsensor:0,area:6,aspect:4,attribut:0,author:[0,1,2,3,4,5,6],autom:4,basic:4,brief:[2,6],can:4,code:4,comp:4,complet:[0,3,6],compon:[3,6],comput:3,conceptu:6,conserv:4,consist:6,content:6,contribut:6,cost:3,count:5,csv2shp:0,current:6,damag:5,date:[0,1,2,3,4,5,6],deploy:6,describ:6,design:[4,6],develop:6,diseas:3,document:4,drainag:4,durbha:3,dure:[3,6],each:[],easili:4,enclosur:5,engg:4,entomolog:5,etc:[3,6],execut:6,expand:1,explain:6,facil:0,field:3,finish:3,flowchart:6,follow:6,framework:3,geospati:4,geotiff:0,handi:0,have:0,help:0,here:2,higher:[1,2],horticultur:[1,2,3],how:4,idea:[],imag:[1,2,3,5],implement:6,includ:4,index:6,indian:3,infect:5,inform:[0,6],initi:3,insect:5,interoper:3,introduct:[2,4,6],irrig:4,june:[2,3,4,5],lat:0,learn:5,level:[1,2],librari:4,link:6,list:[3,6],locat:3,lon:0,low:3,machin:[1,2],mai:0,manag:3,market:3,math:[1,2],merg:0,microcontrol:3,minimum:0,model:4,modif:0,modul:6,more:0,need:0,novel:6,object:6,observ:1,oct:[0,1],open:[0,3],outcom:6,page:6,patent:3,pend:3,per:0,percentag:5,person:6,pest:3,phase:6,phd:3,pheromon:5,plan:4,platfrom:3,point:0,problem:4,process:[0,1,2,5],product:3,program:4,project:[3,6],protect:5,quantum:0,read:2,real:3,region:4,relat:1,remot:6,repositori:6,research:6,same:0,sampl:0,satellit:1,sawant:[0,1,2,3,4,5],scienc:4,search:[0,6],select:6,sens:[3,6],seri:1,set:6,should:0,snippet:4,soc:3,softwar:6,soil:4,sourc:0,standard:3,start:2,statist:5,stickei:5,surya:3,suryak:[0,1,2,3,4,5],system:3,tbd:[1,2],technolog:4,tempor:5,test:3,through:6,time:[1,3],titl:6,topic:4,trap:5,txt:0,updat:0,util:4,variat:5,vision:[1,2],water:[3,4],where:0,which:6,who:6},titles:["1: Python and R script to create the shapefiles / RDBMS SQL files from CSV files and pre-existing GIS layers","2: DSS based on spatial interpolation techniques for Crop Yield Estimation","3: Android based service for crop yield estimation","4. Arduino based Wireless Sensor Network for precision Agriculture Monitoring (KrushiSense/SenseTube++)","5.   Book on: Python for Agriculture Engineers","6. Machine vision based crop pest/disease intensity prediction and geospatial analysis tool","Welcome to Idea Notebook"],titleterms:{agricultur:[3,4],analysi:5,android:2,applic:[0,1,2,3,4,5],arduino:3,base:[1,2,3,5],book:4,creat:0,crop:[1,2,5],csv:0,data:[0,1,2,3,4,5],deliver:[0,1,2,3,4,5],detail:[0,1,2,3,4,5],diseas:5,domain:[0,1,2,3,4,5],dss:1,engin:4,estim:[1,2],exist:0,expect:[0,1,2,3,4,5],file:0,from:0,geospati:5,idea:6,indic:6,intellectu:[0,1,2,3,4,5],intens:5,interpol:1,krushisens:3,layer:0,machin:5,monitor:3,network:3,notebook:6,pest:5,pre:0,precis:3,predict:5,properti:[0,1,2,3,4,5],python:[0,4],rdbm:0,reasearch:[0,1,2,3,4,5],requir:[0,1,2,3,4,5],script:0,sensetub:3,sensor:3,servic:2,shapefil:0,spatial:1,sql:0,statu:[0,1,2,3,4,5],synopsi:[0,1,2,3,4,5],tabl:6,techniqu:1,tool:[3,4,5],vision:5,welcom:6,wireless:3,yield:[1,2]}})